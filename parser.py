# coding: utf-8

from openpyxl import load_workbook
import pandas as pd
import requests


АДРЕС_API = "https://damia.ru/api-rs/multbalance"


############################ ДАННЫЕ ДЛЯ ЗАПОЛНЕНИЯ ############################

НАЗВАНИЕ_EXCEL_ФАЙЛА = "....."


ИНН_КОМПАНИЯ = {
    2460066195: "ПАО РусГидро",
}


параметры_запроса = {
    "key": ".....",
    "inn": ",".join(map(str, ИНН_КОМПАНИЯ.keys()))
}

#################################### КОНЕЦ ####################################


ПОЗИЦИИ_БАЛАНСА = [(3 + 25 * i, "D") for i in range(len(ИНН_КОМПАНИЯ))]

ДАННЫЕ_КОМПАНИИ = {
    инн: ПОЗИЦИИ_БАЛАНСА[i] for i, инн in enumerate(ИНН_КОМПАНИЯ.keys())
}


ПОЗИЦИИ_ЧИСТОЙ_ПРИБЫЛИ = [(5 + 5 * i, "D") for i in range(len(ИНН_КОМПАНИЯ))]

ЧИСТАЯ_ПРИБЫЛЬ_КОМПАНИИ = {
    инн: ПОЗИЦИИ_ЧИСТОЙ_ПРИБЫЛИ[i] for i, инн in enumerate(ИНН_КОМПАНИЯ.keys())
}


ПОКАЗАТЕЛЬ_КОД = {
    "Дебиторская задолженность": 1230,
    "Выручка": 2110,
    "Себестоимость": 2120,
    "Активы": 1600,
    "Оборотные активы": 1200,
    "Оборотные средства": 1150,
    "Амортизация": -1,
    "Коммерческие расходы": 2210,
    "Управленческие расходы": 2220,
    "Долгосрочные обязательства": 1400,
    "Краткосрочные обязательства": 1500,
    "Денежные средства": 1250,
    "Задолженность по уплате налога на прибыль": -1,
    "Краткосрочная часть долгосрочных кредитов и займов": -1
}


def сделать_запрос(адрес, параметры={}):
    r = requests.get(адрес, params=параметры)
    r.raise_for_status()
    return r.json()


def номер_столбца(s):
    return sum((ord(c) - 64) * 26**i for i, c in enumerate(s.upper()[::-1])) - 1


баланс = сделать_запрос(АДРЕС_API, параметры_запроса)


данные = {}
чистая_прибыль = {}

for инн in ИНН_КОМПАНИЯ.keys():
    данные[инн] = pd.DataFrame()
    чистая_прибыль[инн] = pd.DataFrame()
    for год in ("2015", "2016", "2017"):
        данные[инн][год] = pd.Series({
            показатель: float(баланс[str(инн)][год].get(str(код), "NaN")) for показатель, код in ПОКАЗАТЕЛЬ_КОД.items()
        })
        чистая_прибыль[инн][год] = [float(баланс[str(инн)][год].get("2400", "NaN"))]


with pd.ExcelWriter(НАЗВАНИЕ_EXCEL_ФАЙЛА) as writer:
    writer.book = load_workbook(НАЗВАНИЕ_EXCEL_ФАЙЛА)
    writer.sheets = {ws.title: ws for ws in writer.book.worksheets}

    pd.Series(ИНН_КОМПАНИЯ).to_excel(
        writer,
        sheet_name="Бениш и Роксас (US)",
        header=False,
        index=False,
        startrow=1,
        startcol=11
    )

    for инн in ИНН_КОМПАНИЯ.keys():
        данные[инн].to_excel(
            writer,
            sheet_name="Бениш и Роксас (US)",
            header=False,
            index=False,
            startrow=ДАННЫЕ_КОМПАНИИ[инн][0] - 1,
            startcol=номер_столбца(ДАННЫЕ_КОМПАНИИ[инн][1])
        )
        чистая_прибыль[инн].to_excel(
            writer,
            sheet_name="ДДС",
            header=False,
            index=False,
            startrow=ЧИСТАЯ_ПРИБЫЛЬ_КОМПАНИИ[инн][0] - 1,
            startcol=номер_столбца(ЧИСТАЯ_ПРИБЫЛЬ_КОМПАНИИ[инн][1])
        )
